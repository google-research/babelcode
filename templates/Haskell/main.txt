{{ header }}
{% if text is not none -%}
-- Question Prompt (NOT what is passed to the model)
{% for line in text.split('\n') -%}
{{ "-- " ~ line ~ "\n"}}
{%- endfor -%}
--
{%- endif %}
-- SOLUTION CODE
-- ============================================

PLACEHOLDER_CODE_BODY

-- TESTING CODE 
-- ============================================
validateSolution :: {{return_type}} -> {{return_type}} -> Bool
validateSolution actual expected = do
    {% filter indent(width=4) -%}
    {{ evaluation_function }}
    {%- endfilter %}

driver :: {{signature}} -> {{ return_type }} -> String
driver {{params|join(' ')}} expected = do
    if (validateSolution (PLACEHOLDER_FN_NAME {{params|join(' ')}}) expected)
        then "PASSED"
    else "FAILED"

main = do
{%- for test_case in test_cases  %}
    printf "TEST-{{test_case.idx}}...%s\n" (driver
    {%- for input_val in test_case.inputs -%}
      {{" (" ~ input_val ~")"}}
    {%- endfor %} ({{test_case.outputs}}) )
{% endfor %}